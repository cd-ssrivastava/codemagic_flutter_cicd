workflows:

  # Development Workflow
  development-workflow:
    name: Development Workflow - Android & iOS
    instance_type: mac_mini_m1
    max_build_duration: 30
    integrations:
      app_store_connect: Codemagic CICD
    triggering:
      events:
        - push
        - tag
      #       - pull_request
      branch_patterns:
        - pattern: dev-*
        - include: true
        - source: true
      tag_patterns:
        - pattern: (build)+( )v+([0-9]).+([0-9]).+([0-9])
        #        - pattern: '{build}*'
        - include: true
      cancel_previous_builds: true
    environment:
      flutter: 3.13.7
      java: 17
      cocoapods: default
      xcode: latest
      ios_signing:
        distribution_type: development
        bundle_identifier: com.example.codemagic
      #        provisioning_profiles:
      #          - profile: profile_reference
      groups:
        - MacOS
        - Paths
        - AppStore
        - Firebase
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
    scripts:
      - name: Set up local.properties
        # Set Flutter SDK path for Android project
        script: echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Loading Configuration files
        script: |
          echo "Creating Android Firebase JSON File..."
          echo $GOOGLE_SERVICES_ANDROID_JSON | base64 -D > $CM_BUILD_DIR/android/app/google-services.json 
          
          echo "Creating iOS Firebase Plist File..."
          echo $GOOGLE_SERVICES_iOS_PLIST | base64 -D > $CM_BUILD_DIR/ios/Runner/GoogleService-Info.plist
        ignore_failure: false # If script fails, stop the building

        # Gets flutter packages of project
      - name: Get Flutter packages
        script: flutter packages pub get

        # Analysis of Flutter Code
      - name: Flutter Analyze
        script: flutter analyze
        # Perform Unit Tests on project
      - name: Flutter Unit Tests
        script: flutter test
        ignore_failure: false

        # Start the app building process
      - name: Build Android App Bundle in Flutter
        script: |
          echo $BUILD_NUMBER 
          flutter build apk --release --build-name=1.0.$BUILD_NUMBER --build-number=$BUILD_NUMBER

      - name: Rename Android Artifacts
        script: |
          if [ ! -f "$ARTIFACTS_ANDROID_APK_RELEASE_PATH" ]; then
          export TIME=$(date +%d_%m_%Y)
          echo $TIME
          export BUILDNAME=Svarupa_$(echo $TIME)_v1.0.$BUILD_NUMBER_b$BUILD_NUMBER.apk
          echo $BUILDNAME
          ls $ARTIFACTS_ANDROID_APK_RELEASE_PATH
           mv "$ARTIFACTS_ANDROID_APK_RELEASE_PATH/app-release.apk" "$ARTIFACTS_ANDROID_APK_RELEASE_PATH/$BUILDNAME"
          fi

    artifacts:
      - $ARTIFACTS_ANDROID_APK_RELEASE_PATH/
      - build/**/outputs/**/mapping.txt
    publishing:
      email:
        recipients:
          - sshivam@citridot.com
        notify:
          success: true
          failure: false
      firebase:
        firebase_token: $FIREBASE_TOKEN
        android:
          app_id: $FIREBASE_APPID_ANDROID
          groups:
            - InternalGroup



  # Production Workflow
  production:
    instance_type: mac_mini_m1
    max_build_duration: 30
    environment:
      # SDK
      flutter: 3.13.7
      cocoapods: default
      # IDE
      xcode: 12.5
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/Library/Caches/CocoaPods

    scripts:
      - name: Add Provisioning profiles
        script: |
          set -e # exit on first failed command

          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          echo ${PROVISIONING_PROFILE?} | base64 --decode > "$PROFILES_HOME/$(uuidgen).mobileprovision"
      - name: Add signing certificate
        script: |
          set -e # exit on first failed command

          echo ${CERTIFICATE?} | base64 --decode > /tmp/certificate.p12
          keychain initialize
          keychain add-certificates \
              --certificate /tmp/certificate.p12 \
              --certificate-password ${CERTIFICATE_PASSWORD?}
      - name: Increment build number
        script: agvtool new-version -all $BUILD_NUMBER
      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles
      - name: Build ipa for distribution
        script: xcode-project build-ipa \
          --workspace "${XCODE_WORKSPACE?}" \
          --scheme "${XCODE_SCHEME?}"
    artifacts:
      - build/ios/ipa/*.ipa
    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
        submit_as_draft: true






    # watched files/folders have changed since the last successful build
    #    when:
    #      changeset:
    #        includes:
    #          - '.'
    #          - 'android/'
    #        excludes:
    #          - '**/*.md'
    #      condition: not event.pull_request.labels[0].name == "codemagicTest"
